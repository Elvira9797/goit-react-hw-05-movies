{"version":3,"file":"static/js/505.213abcb6.chunk.js","mappings":"gMAEaA,E,QAAeC,EAAAA,IAAH,0O,SCkBzB,EAjBe,WACb,OACE,SAACD,EAAD,WACE,SAAC,KAAD,CACEE,OAAO,MACPC,MAAM,MACNC,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBC,SAAS,KAIhB,C,mSCfYC,EAAUT,EAAAA,EAAAA,QAAH,iJAQPU,EAA6BV,EAAAA,EAAAA,GAAH,wRAa1BW,EAAqBX,EAAAA,EAAAA,GAAH,uMAOlBY,EAAoBZ,EAAAA,EAAAA,IAAH,qOAYjBa,GAAqBb,EAAAA,EAAAA,GAAOc,EAAAA,GAAPd,CAAH,mEAKlBe,EAAyBf,EAAAA,EAAAA,GAAH,uF,qBC5CnC,IAJoB,SAAAgB,GAClBA,EAAS,sDACV,C,gKCgCD,EAxBsB,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACvB,OACE,SAAC,KAAD,WACE,SAAC,KAAD,UACGA,EAAcC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,MAAOC,EAA3B,EAA2BA,KAA3B,OACjB,SAAC,KAAD,WACE,UAAC,KAAD,CAAoBC,GAAE,iBAAYJ,GAAlC,WACE,SAAC,KAAD,CACEK,IAAG,8CAAyCJ,GAC5CK,IAAG,OAAEJ,QAAF,IAAEA,EAAAA,EAASC,KAEhB,SAAC,KAAD,iBAAyBD,QAAzB,IAAyBA,EAAAA,EAASC,QANbH,EADR,OAc1B,E,UCOD,EA7Ba,WACX,OAA0CO,EAAAA,EAAAA,UAAS,IAAnD,eAAOT,EAAP,KAAsBU,EAAtB,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcZ,EAAd,KACA,GAAkCU,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,oGAEdF,GAAa,GAFC,UAGKG,EAAAA,EAAAA,MAHL,OAGRC,EAHQ,OAIdP,EAAiBO,EAAKC,SAJR,iDAMdC,EAAAA,EAAAA,GAAYpB,GANE,yBAQdc,GAAa,GARC,4EAAH,qDAWfE,GACD,GAAE,KAGD,gCACGH,IAAa,SAACQ,EAAA,EAAD,IACbT,IAAS,uBAAIA,IACbX,IAAiB,SAAC,EAAD,CAAeA,cAAeA,MAGrD,C,mMC/BKqB,EAAW,+BACXC,EAAU,mCAEHN,EAAgB,mCAAG,oGACPO,EAAAA,EAAAA,IAAA,UAClBF,EADkB,qCACmBC,EADnB,oBADO,cACxBE,EADwB,yBAIvBA,EAASP,MAJc,2CAAH,qDAOhBQ,EAAW,mCAAG,WAAMC,GAAN,uFACFH,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAK,EADA,oBACmBJ,EADnB,oBADE,cACnBE,EADmB,yBAIlBA,EAASP,MAJS,2CAAH,sDAOXU,EAAW,mCAAG,WAAMD,GAAN,uFACFH,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAK,EADA,4BAC2BJ,EAD3B,oBADE,cACnBE,EADmB,yBAIlBA,EAASP,MAJS,2CAAH,sDAOXW,EAAU,mCAAG,WAAMF,GAAN,uFACDH,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAK,EADA,4BAC2BJ,EAD3B,2BADC,cAClBE,EADkB,yBAIjBA,EAASP,MAJQ,2CAAH,sDAOVY,EAAc,mCAAG,WAAMC,GAAN,uFACLP,EAAAA,EAAAA,IAAA,UAClBF,EADkB,+BACaS,EADb,wCACsDR,EADtD,2BADK,cACtBE,EADsB,yBAIrBA,EAASP,MAJY,2CAAH,qD","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/TrendingFilms/TrendingFilms.styled.jsx","helpers/index.js","components/TrendingFilms/TrendingFilms.jsx","pages/Home/Home.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const StyledLoader = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(46, 47, 66, 0.2);\n  z-index: 1000;\n`;\n","import { ThreeDots } from 'react-loader-spinner';\nimport { StyledLoader } from './Loader.styled';\n\nconst Loader = () => {\n  return (\n    <StyledLoader>\n      <ThreeDots\n        height=\"100\"\n        width=\"100\"\n        radius=\"9\"\n        color=\"#f87719\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n    </StyledLoader>\n  );\n};\n\nexport default Loader;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Wrapper = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 40px;\n`;\n\nexport const StyledTrendingFilmsGallery = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(260px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const StyledTrendingFilm = styled.li`\n  border-radius: 2px;\n  overflow: hidden;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const ImageTrendingFilm = styled.img`\n  display: block;\n  width: 100%;\n  height: 460px;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.03);\n    cursor: pointer;\n  }\n`;\n\nexport const StyledTrendingLink = styled(Link)`\n  text-decoration: none;\n  color: white;\n`;\n\nexport const StyledNameTrendingFilm = styled.h2`\n  margin-top: 10px;\n  margin-bottom: 5px;\n  font-size: 22px;\n`;\n","const handleError = setError => {\n  setError('Oops, some error occurred. Please, try again later.');\n};\n\nexport default handleError;\n","import {\n  ImageTrendingFilm,\n  StyledNameTrendingFilm,\n  StyledTrendingFilm,\n  StyledTrendingFilmsGallery,\n  StyledTrendingLink,\n  Wrapper,\n} from './TrendingFilms.styled';\nimport PropTypes from 'prop-types';\n\nconst TrendingFilms = ({ trendingFilms }) => {\n  return (\n    <Wrapper>\n      <StyledTrendingFilmsGallery>\n        {trendingFilms.map(({ id, poster_path, title, name }) => (\n          <StyledTrendingFilm key={id}>\n            <StyledTrendingLink to={`movies/${id}`}>\n              <ImageTrendingFilm\n                src={`https://image.tmdb.org/t/p/original/${poster_path}`}\n                alt={title ?? name}\n              />\n              <StyledNameTrendingFilm>{title ?? name}</StyledNameTrendingFilm>\n            </StyledTrendingLink>\n          </StyledTrendingFilm>\n        ))}\n      </StyledTrendingFilmsGallery>\n    </Wrapper>\n  );\n};\n\nTrendingFilms.propTypes = {\n  trendingFilms: PropTypes.array,\n};\n\nexport default TrendingFilms;\n","import Loader from 'components/Loader';\nimport { useEffect, useState } from 'react';\nimport { getTrendingFilms } from 'services/api';\nimport TrendingFilms from 'components/TrendingFilms';\nimport handleError from 'helpers';\n\nconst Home = () => {\n  const [trendingFilms, setTrendingFilms] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n        const data = await getTrendingFilms();\n        setTrendingFilms(data.results);\n      } catch (error) {\n        handleError(setError);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <p>{error}</p>}\n      {trendingFilms && <TrendingFilms trendingFilms={trendingFilms} />}\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '07c0e032482e785f96b6eca01e8f41dd';\n\nexport const getTrendingFilms = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/all/day?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getFilmById = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getCastFilm = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n\nexport const getMovieByName = async movieName => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?query=${movieName}&include_adult=false&api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n"],"names":["StyledLoader","styled","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","Wrapper","StyledTrendingFilmsGallery","StyledTrendingFilm","ImageTrendingFilm","StyledTrendingLink","Link","StyledNameTrendingFilm","setError","trendingFilms","map","id","poster_path","title","name","to","src","alt","useState","setTrendingFilms","error","isLoading","setIsLoading","useEffect","fetchData","getTrendingFilms","data","results","handleError","Loader","BASE_URL","API_KEY","axios","response","getFilmById","movieId","getCastFilm","getReviews","getMovieByName","movieName"],"sourceRoot":""}